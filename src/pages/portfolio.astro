---
import Layout from '../layouts/Layout.astro';
import Button from '../components/Button.astro';
import Background from '../components/Background.astro';

const projectDetails = [
    {
        projectName: "ChatGPT VSCode Extension",
        projectLink: "https://github.com/lealj/theasdfllmext",
        projectDescription: `Developed a Visual Studio Code extension in TypeScript that 
            enables users to generate AI prompts and interact with LLMs directly within the IDE.
            Developed a user-friendly UI panel in VS Code, enabling interaction with AI model for generating and refining
            prompts.`,
        imageUrl: "/exampleProjectImage.PNG"
    },
    {
        projectName: "DownAndSync - YouTube Music to Plex Media Server",
        projectLink: "https://github.com/username/project2",
        projectDescription: `Developed Python desktop app facilitating music migration from Youtube liked-videos to
            Plex Media Server.
            Used threads to download videos and monitor for new liked videos, regularly syncing liked-videos on Youtube with
            personal music directory.
            Used SQLite to store user music data.
            Setup Github Actions (CI) to build artifact on merges with master branch (CD setup in progress).`,
        imageUrl: "/exampleProjectImage.PNG"
    },
    {
        projectName: "Portfolio",
        projectLink: "https://github.com/username/project2",
        projectDescription: "This is the second project description.",
        imageUrl: "/exampleProjectImage.PNG"
    },
    {
        projectName: "Frank & Son Towing",
        projectLink: "https://github.com/username/project2",
        projectDescription: "This is the second project description.",
        imageUrl: "/exampleProjectImage.PNG"
    },
    {
        projectName: "Stock Mocket",
        projectLink: "https://github.com/username/project2",
        projectDescription: "This is the second project description.",
        imageUrl: "/exampleProjectImage.PNG"
    },
    {
        projectName: "CNT Project",
        projectLink: "https://github.com/username/project2",
        projectDescription: "This is the second project description.",
        imageUrl: "/exampleProjectImage.PNG"
    }
];
---
<style>
    .portfolio-container {
        display: flex;
        width: 1200px;
        flex-direction: column;
        justify-self: center;
    }
    .main-container {
        display: flex;
        justify-content: space-between;
    }
    .left-container {
        margin-top: 5em;
        padding-left: 9em;
        flex: 1;
    }
    .box-title-container {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }
    .right-container {
        flex: 1;
        margin-top: 3em;
        margin-right: 11em;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        word-wrap: break-word;
        overflow-wrap: break-word;
        max-width: 45em;
        height: 100%;
    }
</style>
<Layout>
    <div class="main-container">
        <Background />
        <div class="left-container">
            <main>
                <table>
                    <tbody>
                        {projectDetails.map((proj, index) => (
                            <tr>
                                <td class="box-title-container">
                                    <Button projectName={proj.projectName} index={index} />
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </main>
        </div>
        <div class="right-container">
            <div class="project-container" style="width:100%; opacity: 0; transition: opacity 1s ease-in-out;">
                <div>
                    <div style="display: flex; flex-direction: row; justify-content: space-between; align-items: center;">
                        <h3>{projectDetails[0].projectName}</h3>
                        <a
                        href={projectDetails[0].projectLink}
                        target="_blank"
                        style="text-align: right; font-size: larger; text-decoration: none; color: #7050ff; text-shadow: 0 0 10px rgba(201, 197, 255, 0.7); font-family: 'Arial', sans-serif;"
                        >
                        View Github
                        </a>
                    </div>
                    <img
                    src={projectDetails[0].imageUrl}
                    alt={projectDetails[0].projectName}
                    class="project-image"
                    style="object-fit: cover; max-width: 100%; height: 20em; display: flex; justify-self: center; border-radius: 14px; border: 3px solid #7050ff; box-shadow: 0 0 10px rgba(201, 197, 255, 0.7);"
                    />
                </div>
                <p>{projectDetails[0].projectDescription}</p>
            </div>
        </div> 
    </div>
</Layout>
<script is:inline define:vars={{projectDetails}}>
    function updateProject(project) {
        const projCont = document.querySelector('.project-container');
        projCont.style.opacity = "0";
        // This html doesn't inherit css classes...
        setTimeout(() => {
            projCont.innerHTML = `
                <div>
                    <div style="display: flex; flex-direction: row; justify-content: space-between; align-items: center;">
                        <h3>${project.projectName}</h3>
                        <a
                        href="${project.projectLink}"
                        target="_blank"
                        style="text-align: right; font-size: larger; text-decoration: none; color: #7050ff; text-shadow: 0 0 10px rgba(201, 197, 255, 0.7); font-family: 'Arial', sans-serif;"
                        >
                        View Github
                        </a>
                    </div>
                    <img
                    src="${project.imageUrl}"
                    alt="${project.projectName}"
                    class="project-image"
                    style="object-fit: cover; max-width: 100%; height: 20em; display: flex; justify-self: center; border-radius: 14px; border: 3px solid #7050ff; box-shadow: 0 0 10px rgba(201, 197, 255, 0.7);"
                    />
                </div>
                <p>${project.projectDescription}</p>
            `;
            projCont.style.opacity = "1";
        }, 300);
    }
    // Buttons (attach event listeners)
    const buttons = document.querySelectorAll('.title-button');
    buttons.forEach((button) => {
        button.addEventListener('click', () => {
            // Prevent loading an already active project.
            if (button.classList.contains('selected')) return;

            const index = button.getAttribute('data-index');
            const project = projectDetails[index];

            updateProject(project);

            buttons.forEach(btn => btn.classList.remove('selected'));
            button.classList.add('selected');
        });
    });

    window.onload = () => {
        buttons[0].classList.add('selected');
        //initialButton.add('selected'); 
        setTimeout(() => {
            document.querySelector('.project-container').style.opacity = "1";
        }, 200);
    }
</script>